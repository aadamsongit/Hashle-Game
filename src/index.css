@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  --background-color: white;
  --text-color: black;
  --button-bg: #F5F5F5;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

.dark-mode {
  --background-color: #333;
  --text-color: white;
  --button-bg: black;
}


body {
  min-width: 320px;
  min-height: 100vh;
  background-color: var(--background-color);
  color: var(--text-color);
  z-index: -1
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

button {
  all: unset;
  position: relative;
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: var(--button-bg);
  cursor: pointer;
}
button:hover {
  border-color: #646cff;
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }

}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-10px); }
  20%, 40%, 60%, 80% { transform: translateX(10px); }
}

.shake {
  animation: shake 1s ease-out;
}

.bg-green {
  color: #ffffff;
  background-color: green;
}

.bg-yellow {
  color: #ffffff;
  background-color: #B59F3B;
}

.bg-gray {
  color: #ffffff;
  background-color: gray;
}

.terminal-title {
  font-family: monospace;
  white-space: nowrap;
  border-right: 0.11em solid orange;
  letter-spacing: 0.15em;
  display: inline-block; /* Keeps the text on one line */
  overflow: hidden; /* Hides the text before animation starts */
  
  /* Adjust the width dynamically to reveal text */
  max-width: 100%; /* Allow the text to expand fully */
  
  animation: 
    typing 3.5s steps(30, end) forwards, /* Typing animation */
    blink-caret 0.5s step-end infinite;  /* Blinking cursor effect */
}

@media (max-width: 670px) {
  .terminal-title {
    max-width: 720;
    box-sizing: border-box;
    overflow: hidden;
    display: block;
    text-align: center;
    white-space: normal;
    /* keep inline-block */
    border-right: none; /* Remove border for smaller screens */
    animation: none; /* Disable animations on small screens */
    padding-bottom: 3.5rem; /* Add some padding for better spacing */
    font-size: 1.5rem; /* Adjust font size for smaller screens */
  }
}
@media (max-width: 640px) {
  .terminal-title {
    max-width: 310px;
    /* new larger width */
  }
}

@keyframes typing {
  from { 
    width: 0; /* Start with no visible text */
  }
  to { 
    width: 100%; /* Expand to full text width */
  }
}

@keyframes blink-caret {
  from, to { 
    border-color: transparent; 
  }
  50% { 
    border-color: orange; /* Makes the caret blink */
  }
}

/* Rainbow background classes - DRY approach */
.rainbow-bg {
  position: relative;
  margin: 2px;
}

.rainbow-bg::before {
  content: "";
  position: absolute;
  top: -3px;
  right: -3px;
  bottom: -3px;
  left: -3px;
  border-radius: 8px;
  animation: rainbowPulse 3s linear infinite;
  z-index: -1;
}

/* Rainbow text classes - DRY approach */
.rainbow-text {
  animation: textPulse 3s linear infinite;
}

/* Animation delays using data attributes */
.rainbow-bg[data-delay="0"]::before { animation-delay: -2.0s; }
.rainbow-bg[data-delay="1"]::before { animation-delay: -1.8s; }
.rainbow-bg[data-delay="2"]::before { animation-delay: -1.6s; }
.rainbow-bg[data-delay="3"]::before { animation-delay: -1.4s; }
.rainbow-bg[data-delay="4"]::before { animation-delay: -1.2s; }
.rainbow-bg[data-delay="5"]::before { animation-delay: -1.0s; }
.rainbow-bg[data-delay="6"]::before { animation-delay: -0.8s; }
.rainbow-bg[data-delay="7"]::before { animation-delay: -0.6s; }
.rainbow-bg[data-delay="8"]::before { animation-delay: -0.4s; }
.rainbow-bg[data-delay="9"]::before { animation-delay: -0.2s; }
.rainbow-bg[data-delay="10"]::before { animation-delay: 0s; }

.rainbow-text[data-delay="0"] { animation-delay: -2.0s; }
.rainbow-text[data-delay="1"] { animation-delay: -1.8s; }
.rainbow-text[data-delay="2"] { animation-delay: -1.6s; }
.rainbow-text[data-delay="3"] { animation-delay: -1.4s; }
.rainbow-text[data-delay="4"] { animation-delay: -1.2s; }
.rainbow-text[data-delay="5"] { animation-delay: -1.0s; }
.rainbow-text[data-delay="6"] { animation-delay: -0.8s; }
.rainbow-text[data-delay="7"] { animation-delay: -0.6s; }
.rainbow-text[data-delay="8"] { animation-delay: -0.4s; }
.rainbow-text[data-delay="9"] { animation-delay: -0.2s; }



@keyframes rainbowPulse {
  0%   { background-color: red; }
  16%  { background-color: orange; }
  33%  { background-color: yellow; }
  50%  { background-color: green; }
  66%  { background-color: blue; }
  83%  { background-color: violet; }
  100% { background-color: red; }

}

@keyframes textPulse {
    0%   { color: red; }
    16%  { color: orange; }
    33%  { color: yellow; }
    50%  { color: green; }
    66%  { color: blue; }
    83%  { color: violet; }
    100% { color: red; }
  }

.game-won,
.game-lost {
  font-size: 1rem;
  font-weight: 600;
  text-align: center;
  padding: 0.75rem 1.5rem;
  border-radius: 0.5rem;
  margin: 1rem auto;
  max-width: 400px;
  letter-spacing: 1px;
  color: #fff;
  position: fixed;
  top: 20px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 9999;
  opacity: 0;
  animation: fadeInOut 2.5s ease-in-out forwards;
  visibility: hidden;
}

.game-won {
  background-color: #22c55e; /* Vibrant green */
  text-shadow:
    0 0 1px #000,
    -1px -1px 0 #000,
     1px -1px 0 #000,
    -1px  1px 0 #000,
     1px  1px 0 #000; /* Black outline */
}

.game-lost {
  background-color: #b23535; /* Red */
  text-shadow:
    0 0 1px #000,
    -1px -1px 0 #000,
     1px -1px 0 #000,
    -1px  1px 0 #000,
     1px  1px 0 #000; /* Black outline */
}

@keyframes fadeInOut {
  0% {
    opacity: 0;
    visibility: hidden;
  }
  15% {
    opacity: 1;
    visibility: visible;
  }
  70% {
    opacity: 1;
  }
  100% {
    opacity: 0;
    visibility: hidden;
  }
}

.switch {
  position: relative;
  display: inline-block;
  width: 60px;
  height: 34px;
}

.switch input { 
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  -webkit-transition: .4s;
  transition: .4s;
}

.slider:before {
  position: absolute;
  content: "‚òÄÔ∏è";
  height: 26px;
  width: 26px;
  left: 4px;
  bottom: 4px;
  background-color: white;
  -webkit-transition: .4s;
  transition: .4s;
}

input:checked + .slider {
  background-color: #2196F3;
}

input:focus + .slider {
  box-shadow: 0 0 1px #2196F3;
}

input:checked + .slider:before {
  -webkit-transform: translateX(26px);
  -ms-transform: translateX(26px);
  transform: translateX(26px);
  content: "üåô";
}

/* Rounded sliders */
.slider.round {
  border-radius: 34px;
}

.slider.round:before {
  border-radius: 50%;
}

.keyboard-row {
  position: relative;
  z-index: 0;
  background-color: transparent;
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  /* was nowrap */
  gap: 0.25rem;
  width: 100%;
  /* changed from max-width: 100vw */
  box-sizing: border-box;
}

.tile {
  transform-style: preserve-3d;
  transition: transform 0.6s ease;
  transform: rotateX(0deg);
  font-weight: 700;
  /* bold */
  font-family: 'Arial', sans-serif;
  text-transform: uppercase;
  user-select: none;
  display: inline-block;
  /* keep them inline */
  width: 2.5rem;
  /* example size, adjust as needed */
  height: 2.5rem;
  line-height: 2.5rem;
  /* vertically centers text */
  text-align: center;
  /* horizontally centers text */
  vertical-align: middle;
  /* aligns with baseline */
  letter-spacing: 0.1em;
}

.tile.revealing {
  animation: flip 0.6s forwards;
}

@keyframes flip {
  0% {
    transform: rotateX(0deg);
  }
  50% {
    transform: rotateX(90deg);
  }
  100% {
    transform: rotateX(0deg);
  }
}

@keyframes bounce {
  0% {
    transform: scale(1);
  }
  30% {
    transform: scale(1.1) translateY(-8px);
  }
  60% {
    transform: scale(0.95) translateY(4px);
  }
  100% {
    transform: scale(1) translateY(0);
  }
}

.tile.bounce {
  animation: bounce 0.5s ease;
}










